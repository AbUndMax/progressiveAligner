package progressiveAligner.ToolClasses;

import java.util.HashMap;
import java.util.function.Supplier;

public enum ScoreMatrix {

    //TODO:
    // 1) identify the %-identity of two sequence in order to choose the corresponding matrix
    // 2) based on the %-identity, pass the corresponding Matrix to the alignment

    // This enum

    BLOSUM45( () -> {
        HashMap<Integer, Integer> blosum = new HashMap<>();
        blosum.put(4259905, 5);   // A, A
        blosum.put(4259922, -2);  // A, R
        blosum.put(4259918, -1);  // A, N
        blosum.put(4259908, -2);  // A, D
        blosum.put(4259907, -1);  // A, C
        blosum.put(4259921, -1);  // A, Q
        blosum.put(4259909, -1);  // A, E
        blosum.put(4259911, 0);   // A, G
        blosum.put(4259912, -2);  // A, H
        blosum.put(4259913, -1);  // A, I
        blosum.put(4259916, -1);  // A, L
        blosum.put(4259915, -1);  // A, K
        blosum.put(4259917, -1);  // A, M
        blosum.put(4259910, -2);  // A, F
        blosum.put(4259920, -1);  // A, P
        blosum.put(4259923, 1);   // A, S
        blosum.put(4259924, 0);   // A, T
        blosum.put(4259927, -2);  // A, W
        blosum.put(4259929, -2);  // A, Y
        blosum.put(4259926, 0);   // A, V
        blosum.put(4259906, -1);  // A, B
        blosum.put(4259930, -1);  // A, Z
        blosum.put(4259928, 0);   // A, X
        blosum.put(2752577, -5);  // A, *
        blosum.put(5374034, 7);   // R, R
        blosum.put(5111890, 0);   // R, N
        blosum.put(4456530, -1);  // R, D
        blosum.put(4390994, -3);  // R, C
        blosum.put(5308498, 1);   // R, Q
        blosum.put(4522066, 0);   // R, E
        blosum.put(4653138, -2);  // R, G
        blosum.put(4718674, 0);   // R, H
        blosum.put(4784210, -3);  // R, I
        blosum.put(4980818, -2);  // R, L
        blosum.put(4915282, 3);   // R, K
        blosum.put(5046354, -1);  // R, M
        blosum.put(4587602, -2);  // R, F
        blosum.put(5242962, -2);  // R, P
        blosum.put(5374035, -1);  // R, S
        blosum.put(5374036, -1);  // R, T
        blosum.put(5374039, -2);  // R, W
        blosum.put(5374041, -1);  // R, Y
        blosum.put(5374038, -2);  // R, V
        blosum.put(4325458, -1);  // R, B
        blosum.put(5374042, 0);   // R, Z
        blosum.put(5374040, -1);  // R, X
        blosum.put(2752594, -5);  // R, *
        blosum.put(5111886, 6);   // N, N
        blosum.put(4456526, 2);   // N, D
        blosum.put(4390990, -2);  // N, C
        blosum.put(5111889, 0);   // N, Q
        blosum.put(4522062, 0);   // N, E
        blosum.put(4653134, 0);   // N, G
        blosum.put(4718670, 1);   // N, H
        blosum.put(4784206, -2);  // N, I
        blosum.put(4980814, -3);  // N, L
        blosum.put(4915278, 0);   // N, K
        blosum.put(5046350, -2);  // N, M
        blosum.put(4587598, -2);  // N, F
        blosum.put(5111888, -2);  // N, P
        blosum.put(5111891, 1);   // N, S
        blosum.put(5111892, 0);   // N, T
        blosum.put(5111895, -4);  // N, W
        blosum.put(5111897, -2);  // N, Y
        blosum.put(5111894, -3);  // N, V
        blosum.put(4325454, 4);   // N, B
        blosum.put(5111898, 0);   // N, Z
        blosum.put(5111896, -1);  // N, X
        blosum.put(2752590, -5);  // N, *
        blosum.put(4456516, 7);   // D, D
        blosum.put(4390980, -3);  // D, C
        blosum.put(4456529, 0);   // D, Q
        blosum.put(4456517, 2);   // D, E
        blosum.put(4456519, -1);  // D, G
        blosum.put(4456520, 0);   // D, H
        blosum.put(4456521, -4);  // D, I
        blosum.put(4456524, -3);  // D, L
        blosum.put(4456523, 0);   // D, K
        blosum.put(4456525, -3);  // D, M
        blosum.put(4456518, -4);  // D, F
        blosum.put(4456528, -1);  // D, P
        blosum.put(4456531, 0);   // D, S
        blosum.put(4456532, -1);  // D, T
        blosum.put(4456535, -4);  // D, W
        blosum.put(4456537, -2);  // D, Y
        blosum.put(4456534, -3);  // D, V
        blosum.put(4325444, 5);   // D, B
        blosum.put(4456538, 1);   // D, Z
        blosum.put(4456536, -1);  // D, X
        blosum.put(2752580, -5);  // D, *
        blosum.put(4390979, 12);  // C, C
        blosum.put(4390993, -3);  // C, Q
        blosum.put(4390981, -3);  // C, E
        blosum.put(4390983, -3);  // C, G
        blosum.put(4390984, -3);  // C, H
        blosum.put(4390985, -3);  // C, I
        blosum.put(4390988, -2);  // C, L
        blosum.put(4390987, -3);  // C, K
        blosum.put(4390989, -2);  // C, M
        blosum.put(4390982, -2);  // C, F
        blosum.put(4390992, -4);  // C, P
        blosum.put(4390995, -1);  // C, S
        blosum.put(4390996, -1);  // C, T
        blosum.put(4390999, -5);  // C, W
        blosum.put(4391001, -3);  // C, Y
        blosum.put(4390998, -1);  // C, V
        blosum.put(4325443, -2);  // C, B
        blosum.put(4391002, -3);  // C, Z
        blosum.put(4391000, -2);  // C, X
        blosum.put(2752579, -5);  // C, *
        blosum.put(5308497, 6);   // Q, Q
        blosum.put(4522065, 2);   // Q, E
        blosum.put(4653137, -2);  // Q, G
        blosum.put(4718673, 1);   // Q, H
        blosum.put(4784209, -2);  // Q, I
        blosum.put(4980817, -2);  // Q, L
        blosum.put(4915281, 1);   // Q, K
        blosum.put(5046353, 0);   // Q, M
        blosum.put(4587601, -4);  // Q, F
        blosum.put(5242961, -1);  // Q, P
        blosum.put(5308499, 0);   // Q, S
        blosum.put(5308500, -1);  // Q, T
        blosum.put(5308503, -2);  // Q, W
        blosum.put(5308505, -1);  // Q, Y
        blosum.put(5308502, -3);  // Q, V
        blosum.put(4325457, 0);   // Q, B
        blosum.put(5308506, 4);   // Q, Z
        blosum.put(5308504, -1);  // Q, X
        blosum.put(2752593, -5);  // Q, *
        blosum.put(4522053, 6);   // E, E
        blosum.put(4522055, -2);  // E, G
        blosum.put(4522056, 0);   // E, H
        blosum.put(4522057, -3);  // E, I
        blosum.put(4522060, -2);  // E, L
        blosum.put(4522059, 1);   // E, K
        blosum.put(4522061, -2);  // E, M
        blosum.put(4522054, -3);  // E, F
        blosum.put(4522064, 0);   // E, P
        blosum.put(4522067, 0);   // E, S
        blosum.put(4522068, -1);  // E, T
        blosum.put(4522071, -3);  // E, W
        blosum.put(4522073, -2);  // E, Y
        blosum.put(4522070, -3);  // E, V
        blosum.put(4325445, 1);   // E, B
        blosum.put(4522074, 4);   // E, Z
        blosum.put(4522072, -1);  // E, X
        blosum.put(2752581, -5);  // E, *
        blosum.put(4653127, 7);   // G, G
        blosum.put(4653128, -2);  // G, H
        blosum.put(4653129, -4);  // G, I
        blosum.put(4653132, -3);  // G, L
        blosum.put(4653131, -2);  // G, K
        blosum.put(4653133, -2);  // G, M
        blosum.put(4587591, -3);  // G, F
        blosum.put(4653136, -2);  // G, P
        blosum.put(4653139, 0);   // G, S
        blosum.put(4653140, -2);  // G, T
        blosum.put(4653143, -2);  // G, W
        blosum.put(4653145, -3);  // G, Y
        blosum.put(4653142, -3);  // G, V
        blosum.put(4325447, -1);  // G, B
        blosum.put(4653146, -2);  // G, Z
        blosum.put(4653144, -1);  // G, X
        blosum.put(2752583, -5);  // G, *
        blosum.put(4718664, 10);  // H, H
        blosum.put(4718665, -3);  // H, I
        blosum.put(4718668, -2);  // H, L
        blosum.put(4718667, -1);  // H, K
        blosum.put(4718669, 0);   // H, M
        blosum.put(4587592, -2);  // H, F
        blosum.put(4718672, -2);  // H, P
        blosum.put(4718675, -1);  // H, S
        blosum.put(4718676, -2);  // H, T
        blosum.put(4718679, -3);  // H, W
        blosum.put(4718681, 2);   // H, Y
        blosum.put(4718678, -3);  // H, V
        blosum.put(4325448, 0);   // H, B
        blosum.put(4718682, 0);   // H, Z
        blosum.put(4718680, -1);  // H, X
        blosum.put(2752584, -5);  // H, *
        blosum.put(4784201, 5);   // I, I
        blosum.put(4784204, 2);   // I, L
        blosum.put(4784203, -3);  // I, K
        blosum.put(4784205, 2);   // I, M
        blosum.put(4587593, 0);   // I, F
        blosum.put(4784208, -2);  // I, P
        blosum.put(4784211, -2);  // I, S
        blosum.put(4784212, -1);  // I, T
        blosum.put(4784215, -2);  // I, W
        blosum.put(4784217, 0);   // I, Y
        blosum.put(4784214, 3);   // I, V
        blosum.put(4325449, -3);  // I, B
        blosum.put(4784218, -3);  // I, Z
        blosum.put(4784216, -1);  // I, X
        blosum.put(2752585, -5);  // I, *
        blosum.put(4980812, 5);   // L, L
        blosum.put(4915276, -3);  // L, K
        blosum.put(4980813, 2);   // L, M
        blosum.put(4587596, 1);   // L, F
        blosum.put(4980816, -3);  // L, P
        blosum.put(4980819, -3);  // L, S
        blosum.put(4980820, -1);  // L, T
        blosum.put(4980823, -2);  // L, W
        blosum.put(4980825, 0);   // L, Y
        blosum.put(4980822, 1);   // L, V
        blosum.put(4325452, -3);  // L, B
        blosum.put(4980826, -2);  // L, Z
        blosum.put(4980824, -1);  // L, X
        blosum.put(2752588, -5);  // L, *
        blosum.put(4915275, 5);   // K, K
        blosum.put(4915277, -1);  // K, M
        blosum.put(4587595, -3);  // K, F
        blosum.put(4915280, -1);  // K, P
        blosum.put(4915283, -1);  // K, S
        blosum.put(4915284, -1);  // K, T
        blosum.put(4915287, -2);  // K, W
        blosum.put(4915289, -1);  // K, Y
        blosum.put(4915286, -2);  // K, V
        blosum.put(4325451, 0);   // K, B
        blosum.put(4915290, 1);   // K, Z
        blosum.put(4915288, -1);  // K, X
        blosum.put(2752587, -5);  // K, *
        blosum.put(5046349, 6);   // M, M
        blosum.put(4587597, 0);   // M, F
        blosum.put(5046352, -2);  // M, P
        blosum.put(5046355, -2);  // M, S
        blosum.put(5046356, -1);  // M, T
        blosum.put(5046359, -2);  // M, W
        blosum.put(5046361, 0);   // M, Y
        blosum.put(5046358, 1);   // M, V
        blosum.put(4325453, -2);  // M, B
        blosum.put(5046362, -1);  // M, Z
        blosum.put(5046360, -1);  // M, X
        blosum.put(2752589, -5);  // M, *
        blosum.put(4587590, 8);   // F, F
        blosum.put(4587600, -3);  // F, P
        blosum.put(4587603, -2);  // F, S
        blosum.put(4587604, -1);  // F, T
        blosum.put(4587607, 1);   // F, W
        blosum.put(4587609, 3);   // F, Y
        blosum.put(4587606, 0);   // F, V
        blosum.put(4325446, -3);  // F, B
        blosum.put(4587610, -3);  // F, Z
        blosum.put(4587608, -1);  // F, X
        blosum.put(2752582, -5);  // F, *
        blosum.put(5242960, 9);   // P, P
        blosum.put(5242963, -1);  // P, S
        blosum.put(5242964, -1);  // P, T
        blosum.put(5242967, -3);  // P, W
        blosum.put(5242969, -3);  // P, Y
        blosum.put(5242966, -3);  // P, V
        blosum.put(4325456, -2);  // P, B
        blosum.put(5242970, -1);  // P, Z
        blosum.put(5242968, -1);  // P, X
        blosum.put(2752592, -5);  // P, *
        blosum.put(5439571, 4);   // S, S
        blosum.put(5439572, 2);   // S, T
        blosum.put(5439575, -4);  // S, W
        blosum.put(5439577, -2);  // S, Y
        blosum.put(5439574, -1);  // S, V
        blosum.put(4325459, 0);   // S, B
        blosum.put(5439578, 0);   // S, Z
        blosum.put(5439576, 0);   // S, X
        blosum.put(2752595, -5);  // S, *
        blosum.put(5505108, 5);   // T, T
        blosum.put(5505111, -3);  // T, W
        blosum.put(5505113, -1);  // T, Y
        blosum.put(5505110, 0);   // T, V
        blosum.put(4325460, 0);   // T, B
        blosum.put(5505114, -1);  // T, Z
        blosum.put(5505112, 0);   // T, X
        blosum.put(2752596, -5);  // T, *
        blosum.put(5701719, 15);  // W, W
        blosum.put(5701721, 3);   // W, Y
        blosum.put(5636183, -3);  // W, V
        blosum.put(4325463, -4);  // W, B
        blosum.put(5701722, -2);  // W, Z
        blosum.put(5701720, -2);  // W, X
        blosum.put(2752599, -5);  // W, *
        blosum.put(5832793, 8);   // Y, Y
        blosum.put(5636185, -1);  // Y, V
        blosum.put(4325465, -2);  // Y, B
        blosum.put(5832794, -2);  // Y, Z
        blosum.put(5767257, -1);  // Y, X
        blosum.put(2752601, -5);  // Y, *
        blosum.put(5636182, 5);   // V, V
        blosum.put(4325462, -3);  // V, B
        blosum.put(5636186, -3);  // V, Z
        blosum.put(5636184, -1);  // V, X
        blosum.put(2752598, -5);  // V, *
        blosum.put(4325442, 4);   // B, B
        blosum.put(4325466, 2);   // B, Z
        blosum.put(4325464, -1);  // B, X
        blosum.put(2752578, -5);  // B, *
        blosum.put(5898330, 4);   // Z, Z
        blosum.put(5767258, -1);  // Z, X
        blosum.put(2752602, -5);  // Z, *
        blosum.put(5767256, -1);  // X, X
        blosum.put(2752600, -5);  // X, *
        blosum.put(2752554, 1);   // *, *
        return blosum;
    }),

    BLOSUM50( () -> {
        HashMap<Integer, Integer> blosum = new HashMap<>();
        blosum.put(4259905, 5);   // A, A
        blosum.put(4259922, -2);  // A, R
        blosum.put(4259918, -1);  // A, N
        blosum.put(4259908, -2);  // A, D
        blosum.put(4259907, -1);  // A, C
        blosum.put(4259921, -1);  // A, Q
        blosum.put(4259909, -1);  // A, E
        blosum.put(4259911, 0);   // A, G
        blosum.put(4259912, -2);  // A, H
        blosum.put(4259913, -1);  // A, I
        blosum.put(4259916, -2);  // A, L
        blosum.put(4259915, -1);  // A, K
        blosum.put(4259917, -1);  // A, M
        blosum.put(4259910, -3);  // A, F
        blosum.put(4259920, -1);  // A, P
        blosum.put(4259923, 1);   // A, S
        blosum.put(4259924, 0);   // A, T
        blosum.put(4259927, -3);  // A, W
        blosum.put(4259929, -2);  // A, Y
        blosum.put(4259926, 0);   // A, V
        blosum.put(4259906, -2);  // A, B
        blosum.put(4259930, -1);  // A, Z
        blosum.put(4259928, -1);  // A, X
        blosum.put(2752577, -5);  // A, *
        blosum.put(5374034, 7);   // R, R
        blosum.put(5111890, -1);  // R, N
        blosum.put(4456530, -2);  // R, D
        blosum.put(4390994, -4);  // R, C
        blosum.put(5308498, 1);   // R, Q
        blosum.put(4522066, 0);   // R, E
        blosum.put(4653138, -3);  // R, G
        blosum.put(4718674, 0);   // R, H
        blosum.put(4784210, -4);  // R, I
        blosum.put(4980818, -3);  // R, L
        blosum.put(4915282, 3);   // R, K
        blosum.put(5046354, -2);  // R, M
        blosum.put(4587602, -3);  // R, F
        blosum.put(5242962, -3);  // R, P
        blosum.put(5374035, -1);  // R, S
        blosum.put(5374036, -1);  // R, T
        blosum.put(5374039, -3);  // R, W
        blosum.put(5374041, -1);  // R, Y
        blosum.put(5374038, -3);  // R, V
        blosum.put(4325458, -1);  // R, B
        blosum.put(5374042, 0);   // R, Z
        blosum.put(5374040, -1);  // R, X
        blosum.put(2752594, -5);  // R, *
        blosum.put(5111886, 7);   // N, N
        blosum.put(4456526, 2);   // N, D
        blosum.put(4390990, -2);  // N, C
        blosum.put(5111889, 0);   // N, Q
        blosum.put(4522062, 0);   // N, E
        blosum.put(4653134, 0);   // N, G
        blosum.put(4718670, 1);   // N, H
        blosum.put(4784206, -3);  // N, I
        blosum.put(4980814, -4);  // N, L
        blosum.put(4915278, 0);   // N, K
        blosum.put(5046350, -2);  // N, M
        blosum.put(4587598, -4);  // N, F
        blosum.put(5111888, -2);  // N, P
        blosum.put(5111891, 1);   // N, S
        blosum.put(5111892, 0);   // N, T
        blosum.put(5111895, -4);  // N, W
        blosum.put(5111897, -2);  // N, Y
        blosum.put(5111894, -3);  // N, V
        blosum.put(4325454, 4);   // N, B
        blosum.put(5111898, 0);   // N, Z
        blosum.put(5111896, -1);  // N, X
        blosum.put(2752590, -5);  // N, *
        blosum.put(4456516, 8);   // D, D
        blosum.put(4390980, -4);  // D, C
        blosum.put(4456529, 0);   // D, Q
        blosum.put(4456517, 2);   // D, E
        blosum.put(4456519, -1);  // D, G
        blosum.put(4456520, -1);  // D, H
        blosum.put(4456521, -4);  // D, I
        blosum.put(4456524, -4);  // D, L
        blosum.put(4456523, -1);  // D, K
        blosum.put(4456525, -4);  // D, M
        blosum.put(4456518, -5);  // D, F
        blosum.put(4456528, -1);  // D, P
        blosum.put(4456531, 0);   // D, S
        blosum.put(4456532, -1);  // D, T
        blosum.put(4456535, -5);  // D, W
        blosum.put(4456537, -3);  // D, Y
        blosum.put(4456534, -4);  // D, V
        blosum.put(4325444, 5);   // D, B
        blosum.put(4456538, 1);   // D, Z
        blosum.put(4456536, -1);  // D, X
        blosum.put(2752580, -5);  // D, *
        blosum.put(4390979, 13);  // C, C
        blosum.put(4390993, -3);  // C, Q
        blosum.put(4390981, -3);  // C, E
        blosum.put(4390983, -3);  // C, G
        blosum.put(4390984, -3);  // C, H
        blosum.put(4390985, -2);  // C, I
        blosum.put(4390988, -2);  // C, L
        blosum.put(4390987, -3);  // C, K
        blosum.put(4390989, -2);  // C, M
        blosum.put(4390982, -2);  // C, F
        blosum.put(4390992, -4);  // C, P
        blosum.put(4390995, -1);  // C, S
        blosum.put(4390996, -1);  // C, T
        blosum.put(4390999, -5);  // C, W
        blosum.put(4391001, -3);  // C, Y
        blosum.put(4390998, -1);  // C, V
        blosum.put(4325443, -3);  // C, B
        blosum.put(4391002, -3);  // C, Z
        blosum.put(4391000, -2);  // C, X
        blosum.put(2752579, -5);  // C, *
        blosum.put(5308497, 7);   // Q, Q
        blosum.put(4522065, 2);   // Q, E
        blosum.put(4653137, -2);  // Q, G
        blosum.put(4718673, 1);   // Q, H
        blosum.put(4784209, -3);  // Q, I
        blosum.put(4980817, -2);  // Q, L
        blosum.put(4915281, 2);   // Q, K
        blosum.put(5046353, 0);   // Q, M
        blosum.put(4587601, -4);  // Q, F
        blosum.put(5242961, -1);  // Q, P
        blosum.put(5308499, 0);   // Q, S
        blosum.put(5308500, -1);  // Q, T
        blosum.put(5308503, -1);  // Q, W
        blosum.put(5308505, -1);  // Q, Y
        blosum.put(5308502, -3);  // Q, V
        blosum.put(4325457, 0);   // Q, B
        blosum.put(5308506, 4);   // Q, Z
        blosum.put(5308504, -1);  // Q, X
        blosum.put(2752593, -5);  // Q, *
        blosum.put(4522053, 6);   // E, E
        blosum.put(4522055, -3);  // E, G
        blosum.put(4522056, 0);   // E, H
        blosum.put(4522057, -4);  // E, I
        blosum.put(4522060, -3);  // E, L
        blosum.put(4522059, 1);   // E, K
        blosum.put(4522061, -2);  // E, M
        blosum.put(4522054, -3);  // E, F
        blosum.put(4522064, -1);  // E, P
        blosum.put(4522067, -1);  // E, S
        blosum.put(4522068, -1);  // E, T
        blosum.put(4522071, -3);  // E, W
        blosum.put(4522073, -2);  // E, Y
        blosum.put(4522070, -3);  // E, V
        blosum.put(4325445, 1);   // E, B
        blosum.put(4522074, 5);   // E, Z
        blosum.put(4522072, -1);  // E, X
        blosum.put(2752581, -5);  // E, *
        blosum.put(4653127, 8);   // G, G
        blosum.put(4653128, -2);  // G, H
        blosum.put(4653129, -4);  // G, I
        blosum.put(4653132, -4);  // G, L
        blosum.put(4653131, -2);  // G, K
        blosum.put(4653133, -3);  // G, M
        blosum.put(4587591, -4);  // G, F
        blosum.put(4653136, -2);  // G, P
        blosum.put(4653139, 0);   // G, S
        blosum.put(4653140, -2);  // G, T
        blosum.put(4653143, -3);  // G, W
        blosum.put(4653145, -3);  // G, Y
        blosum.put(4653142, -4);  // G, V
        blosum.put(4325447, -1);  // G, B
        blosum.put(4653146, -2);  // G, Z
        blosum.put(4653144, -2);  // G, X
        blosum.put(2752583, -5);  // G, *
        blosum.put(4718664, 10);  // H, H
        blosum.put(4718665, -4);  // H, I
        blosum.put(4718668, -3);  // H, L
        blosum.put(4718667, 0);   // H, K
        blosum.put(4718669, -1);  // H, M
        blosum.put(4587592, -1);  // H, F
        blosum.put(4718672, -2);  // H, P
        blosum.put(4718675, -1);  // H, S
        blosum.put(4718676, -2);  // H, T
        blosum.put(4718679, -3);  // H, W
        blosum.put(4718681, 2);   // H, Y
        blosum.put(4718678, -4);  // H, V
        blosum.put(4325448, 0);   // H, B
        blosum.put(4718682, 0);   // H, Z
        blosum.put(4718680, -1);  // H, X
        blosum.put(2752584, -5);  // H, *
        blosum.put(4784201, 5);   // I, I
        blosum.put(4784204, 2);   // I, L
        blosum.put(4784203, -3);  // I, K
        blosum.put(4784205, 2);   // I, M
        blosum.put(4587593, 0);   // I, F
        blosum.put(4784208, -3);  // I, P
        blosum.put(4784211, -3);  // I, S
        blosum.put(4784212, -1);  // I, T
        blosum.put(4784215, -3);  // I, W
        blosum.put(4784217, -1);  // I, Y
        blosum.put(4784214, 4);   // I, V
        blosum.put(4325449, -4);  // I, B
        blosum.put(4784218, -3);  // I, Z
        blosum.put(4784216, -1);  // I, X
        blosum.put(2752585, -5);  // I, *
        blosum.put(4980812, 5);   // L, L
        blosum.put(4915276, -3);  // L, K
        blosum.put(4980813, 3);   // L, M
        blosum.put(4587596, 1);   // L, F
        blosum.put(4980816, -4);  // L, P
        blosum.put(4980819, -3);  // L, S
        blosum.put(4980820, -1);  // L, T
        blosum.put(4980823, -2);  // L, W
        blosum.put(4980825, -1);  // L, Y
        blosum.put(4980822, 1);   // L, V
        blosum.put(4325452, -4);  // L, B
        blosum.put(4980826, -3);  // L, Z
        blosum.put(4980824, -1);  // L, X
        blosum.put(2752588, -5);  // L, *
        blosum.put(4915275, 6);   // K, K
        blosum.put(4915277, -2);  // K, M
        blosum.put(4587595, -4);  // K, F
        blosum.put(4915280, -1);  // K, P
        blosum.put(4915283, 0);   // K, S
        blosum.put(4915284, -1);  // K, T
        blosum.put(4915287, -3);  // K, W
        blosum.put(4915289, -2);  // K, Y
        blosum.put(4915286, -3);  // K, V
        blosum.put(4325451, 0);   // K, B
        blosum.put(4915290, 1);   // K, Z
        blosum.put(4915288, -1);  // K, X
        blosum.put(2752587, -5);  // K, *
        blosum.put(5046349, 7);   // M, M
        blosum.put(4587597, 0);   // M, F
        blosum.put(5046352, -3);  // M, P
        blosum.put(5046355, -2);  // M, S
        blosum.put(5046356, -1);  // M, T
        blosum.put(5046359, -1);  // M, W
        blosum.put(5046361, 0);   // M, Y
        blosum.put(5046358, 1);   // M, V
        blosum.put(4325453, -3);  // M, B
        blosum.put(5046362, -1);  // M, Z
        blosum.put(5046360, -1);  // M, X
        blosum.put(2752589, -5);  // M, *
        blosum.put(4587590, 8);   // F, F
        blosum.put(4587600, -4);  // F, P
        blosum.put(4587603, -3);  // F, S
        blosum.put(4587604, -2);  // F, T
        blosum.put(4587607, 1);   // F, W
        blosum.put(4587609, 4);   // F, Y
        blosum.put(4587606, -1);  // F, V
        blosum.put(4325446, -4);  // F, B
        blosum.put(4587610, -4);  // F, Z
        blosum.put(4587608, -2);  // F, X
        blosum.put(2752582, -5);  // F, *
        blosum.put(5242960, 10);  // P, P
        blosum.put(5242963, -1);  // P, S
        blosum.put(5242964, -1);  // P, T
        blosum.put(5242967, -4);  // P, W
        blosum.put(5242969, -3);  // P, Y
        blosum.put(5242966, -3);  // P, V
        blosum.put(4325456, -2);  // P, B
        blosum.put(5242970, -1);  // P, Z
        blosum.put(5242968, -2);  // P, X
        blosum.put(2752592, -5);  // P, *
        blosum.put(5439571, 5);   // S, S
        blosum.put(5439572, 2);   // S, T
        blosum.put(5439575, -4);  // S, W
        blosum.put(5439577, -2);  // S, Y
        blosum.put(5439574, -2);  // S, V
        blosum.put(4325459, 0);   // S, B
        blosum.put(5439578, 0);   // S, Z
        blosum.put(5439576, -1);  // S, X
        blosum.put(2752595, -5);  // S, *
        blosum.put(5505108, 5);   // T, T
        blosum.put(5505111, -3);  // T, W
        blosum.put(5505113, -2);  // T, Y
        blosum.put(5505110, 0);   // T, V
        blosum.put(4325460, 0);   // T, B
        blosum.put(5505114, -1);  // T, Z
        blosum.put(5505112, 0);   // T, X
        blosum.put(2752596, -5);  // T, *
        blosum.put(5701719, 15);  // W, W
        blosum.put(5701721, 2);   // W, Y
        blosum.put(5636183, -3);  // W, V
        blosum.put(4325463, -5);  // W, B
        blosum.put(5701722, -2);  // W, Z
        blosum.put(5701720, -3);  // W, X
        blosum.put(2752599, -5);  // W, *
        blosum.put(5832793, 8);   // Y, Y
        blosum.put(5636185, -1);  // Y, V
        blosum.put(4325465, -3);  // Y, B
        blosum.put(5832794, -2);  // Y, Z
        blosum.put(5767257, -1);  // Y, X
        blosum.put(2752601, -5);  // Y, *
        blosum.put(5636182, 5);   // V, V
        blosum.put(4325462, -4);  // V, B
        blosum.put(5636186, -3);  // V, Z
        blosum.put(5636184, -1);  // V, X
        blosum.put(2752598, -5);  // V, *
        blosum.put(4325442, 5);   // B, B
        blosum.put(4325466, 2);   // B, Z
        blosum.put(4325464, -1);  // B, X
        blosum.put(2752578, -5);  // B, *
        blosum.put(5898330, 5);   // Z, Z
        blosum.put(5767258, -1);  // Z, X
        blosum.put(2752602, -5);  // Z, *
        blosum.put(5767256, -1);  // X, X
        blosum.put(2752600, -5);  // X, *
        blosum.put(2752554, 1);   // *, *
        return blosum;
    }),

    BLOSUM62( () -> {
        HashMap<Integer, Integer> blosum = new HashMap<>();
        blosum.put(4259905, 4);   // A, A
        blosum.put(4259922, -1);  // A, R
        blosum.put(4259918, -2);  // A, N
        blosum.put(4259908, -2);  // A, D
        blosum.put(4259907, 0);   // A, C
        blosum.put(4259921, -1);  // A, Q
        blosum.put(4259909, -1);  // A, E
        blosum.put(4259911, 0);   // A, G
        blosum.put(4259912, -2);  // A, H
        blosum.put(4259913, -1);  // A, I
        blosum.put(4259916, -1);  // A, L
        blosum.put(4259915, -1);  // A, K
        blosum.put(4259917, -1);  // A, M
        blosum.put(4259910, -2);  // A, F
        blosum.put(4259920, -1);  // A, P
        blosum.put(4259923, 1);   // A, S
        blosum.put(4259924, 0);   // A, T
        blosum.put(4259927, -3);  // A, W
        blosum.put(4259929, -2);  // A, Y
        blosum.put(4259926, 0);   // A, V
        blosum.put(4259906, -2);  // A, B
        blosum.put(4259930, -1);  // A, Z
        blosum.put(4259928, 0);   // A, X
        blosum.put(2752577, -4);  // A, *
        blosum.put(5374034, 5);   // R, R
        blosum.put(5111890, 0);   // R, N
        blosum.put(4456530, -2);  // R, D
        blosum.put(4390994, -3);  // R, C
        blosum.put(5308498, 1);   // R, Q
        blosum.put(4522066, 0);   // R, E
        blosum.put(4653138, -2);  // R, G
        blosum.put(4718674, 0);   // R, H
        blosum.put(4784210, -3);  // R, I
        blosum.put(4980818, -2);  // R, L
        blosum.put(4915282, 2);   // R, K
        blosum.put(5046354, -1);  // R, M
        blosum.put(4587602, -3);  // R, F
        blosum.put(5242962, -2);  // R, P
        blosum.put(5374035, -1);  // R, S
        blosum.put(5374036, -1);  // R, T
        blosum.put(5374039, -3);  // R, W
        blosum.put(5374041, -2);  // R, Y
        blosum.put(5374038, -3);  // R, V
        blosum.put(4325458, -1);  // R, B
        blosum.put(5374042, 0);   // R, Z
        blosum.put(5374040, -1);  // R, X
        blosum.put(2752594, -4);  // R, *
        blosum.put(5111886, 6);   // N, N
        blosum.put(4456526, 1);   // N, D
        blosum.put(4390990, -3);  // N, C
        blosum.put(5111889, 0);   // N, Q
        blosum.put(4522062, 0);   // N, E
        blosum.put(4653134, 0);   // N, G
        blosum.put(4718670, 1);   // N, H
        blosum.put(4784206, -3);  // N, I
        blosum.put(4980814, -3);  // N, L
        blosum.put(4915278, 0);   // N, K
        blosum.put(5046350, -2);  // N, M
        blosum.put(4587598, -3);  // N, F
        blosum.put(5111888, -2);  // N, P
        blosum.put(5111891, 1);   // N, S
        blosum.put(5111892, 0);   // N, T
        blosum.put(5111895, -4);  // N, W
        blosum.put(5111897, -2);  // N, Y
        blosum.put(5111894, -3);  // N, V
        blosum.put(4325454, 3);   // N, B
        blosum.put(5111898, 0);   // N, Z
        blosum.put(5111896, -1);  // N, X
        blosum.put(2752590, -4);  // N, *
        blosum.put(4456516, 6);   // D, D
        blosum.put(4390980, -3);  // D, C
        blosum.put(4456529, 0);   // D, Q
        blosum.put(4456517, 2);   // D, E
        blosum.put(4456519, -1);  // D, G
        blosum.put(4456520, -1);  // D, H
        blosum.put(4456521, -3);  // D, I
        blosum.put(4456524, -4);  // D, L
        blosum.put(4456523, -1);  // D, K
        blosum.put(4456525, -3);  // D, M
        blosum.put(4456518, -3);  // D, F
        blosum.put(4456528, -1);  // D, P
        blosum.put(4456531, 0);   // D, S
        blosum.put(4456532, -1);  // D, T
        blosum.put(4456535, -4);  // D, W
        blosum.put(4456537, -3);  // D, Y
        blosum.put(4456534, -3);  // D, V
        blosum.put(4325444, 4);   // D, B
        blosum.put(4456538, 1);   // D, Z
        blosum.put(4456536, -1);  // D, X
        blosum.put(2752580, -4);  // D, *
        blosum.put(4390979, 9);   // C, C
        blosum.put(4390993, -3);  // C, Q
        blosum.put(4390981, -4);  // C, E
        blosum.put(4390983, -3);  // C, G
        blosum.put(4390984, -3);  // C, H
        blosum.put(4390985, -1);  // C, I
        blosum.put(4390988, -1);  // C, L
        blosum.put(4390987, -3);  // C, K
        blosum.put(4390989, -1);  // C, M
        blosum.put(4390982, -2);  // C, F
        blosum.put(4390992, -3);  // C, P
        blosum.put(4390995, -1);  // C, S
        blosum.put(4390996, -1);  // C, T
        blosum.put(4390999, -2);  // C, W
        blosum.put(4391001, -2);  // C, Y
        blosum.put(4390998, -1);  // C, V
        blosum.put(4325443, -3);  // C, B
        blosum.put(4391002, -3);  // C, Z
        blosum.put(4391000, -2);  // C, X
        blosum.put(2752579, -4);  // C, *
        blosum.put(5308497, 5);   // Q, Q
        blosum.put(4522065, 2);   // Q, E
        blosum.put(4653137, -2);  // Q, G
        blosum.put(4718673, 0);   // Q, H
        blosum.put(4784209, -3);  // Q, I
        blosum.put(4980817, -2);  // Q, L
        blosum.put(4915281, 1);   // Q, K
        blosum.put(5046353, 0);   // Q, M
        blosum.put(4587601, -3);  // Q, F
        blosum.put(5242961, -1);  // Q, P
        blosum.put(5308499, 0);   // Q, S
        blosum.put(5308500, -1);  // Q, T
        blosum.put(5308503, -2);  // Q, W
        blosum.put(5308505, -1);  // Q, Y
        blosum.put(5308502, -2);  // Q, V
        blosum.put(4325457, 0);   // Q, B
        blosum.put(5308506, 3);   // Q, Z
        blosum.put(5308504, -1);  // Q, X
        blosum.put(2752593, -4);  // Q, *
        blosum.put(4522053, 5);   // E, E
        blosum.put(4522055, -2);  // E, G
        blosum.put(4522056, 0);   // E, H
        blosum.put(4522057, -3);  // E, I
        blosum.put(4522060, -3);  // E, L
        blosum.put(4522059, 1);   // E, K
        blosum.put(4522061, -2);  // E, M
        blosum.put(4522054, -3);  // E, F
        blosum.put(4522064, -1);  // E, P
        blosum.put(4522067, 0);   // E, S
        blosum.put(4522068, -1);  // E, T
        blosum.put(4522071, -3);  // E, W
        blosum.put(4522073, -2);  // E, Y
        blosum.put(4522070, -2);  // E, V
        blosum.put(4325445, 1);   // E, B
        blosum.put(4522074, 4);   // E, Z
        blosum.put(4522072, -1);  // E, X
        blosum.put(2752581, -4);  // E, *
        blosum.put(4653127, 6);   // G, G
        blosum.put(4653128, -2);  // G, H
        blosum.put(4653129, -4);  // G, I
        blosum.put(4653132, -4);  // G, L
        blosum.put(4653131, -2);  // G, K
        blosum.put(4653133, -3);  // G, M
        blosum.put(4587591, -3);  // G, F
        blosum.put(4653136, -2);  // G, P
        blosum.put(4653139, 0);   // G, S
        blosum.put(4653140, -2);  // G, T
        blosum.put(4653143, -2);  // G, W
        blosum.put(4653145, -3);  // G, Y
        blosum.put(4653142, -3);  // G, V
        blosum.put(4325447, -1);  // G, B
        blosum.put(4653146, -2);  // G, Z
        blosum.put(4653144, -1);  // G, X
        blosum.put(2752583, -4);  // G, *
        blosum.put(4718664, 8);   // H, H
        blosum.put(4718665, -3);  // H, I
        blosum.put(4718668, -3);  // H, L
        blosum.put(4718667, -1);  // H, K
        blosum.put(4718669, -2);  // H, M
        blosum.put(4587592, -1);  // H, F
        blosum.put(4718672, -2);  // H, P
        blosum.put(4718675, -1);  // H, S
        blosum.put(4718676, -2);  // H, T
        blosum.put(4718679, -2);  // H, W
        blosum.put(4718681, 2);   // H, Y
        blosum.put(4718678, -3);  // H, V
        blosum.put(4325448, 0);   // H, B
        blosum.put(4718682, 0);   // H, Z
        blosum.put(4718680, -1);  // H, X
        blosum.put(2752584, -4);  // H, *
        blosum.put(4784201, 4);   // I, I
        blosum.put(4784204, 2);   // I, L
        blosum.put(4784203, -3);  // I, K
        blosum.put(4784205, 1);   // I, M
        blosum.put(4587593, 0);   // I, F
        blosum.put(4784208, -3);  // I, P
        blosum.put(4784211, -2);  // I, S
        blosum.put(4784212, -1);  // I, T
        blosum.put(4784215, -3);  // I, W
        blosum.put(4784217, -1);  // I, Y
        blosum.put(4784214, 3);   // I, V
        blosum.put(4325449, -3);  // I, B
        blosum.put(4784218, -3);  // I, Z
        blosum.put(4784216, -1);  // I, X
        blosum.put(2752585, -4);  // I, *
        blosum.put(4980812, 4);   // L, L
        blosum.put(4915276, -2);  // L, K
        blosum.put(4980813, 2);   // L, M
        blosum.put(4587596, 0);   // L, F
        blosum.put(4980816, -3);  // L, P
        blosum.put(4980819, -2);  // L, S
        blosum.put(4980820, -1);  // L, T
        blosum.put(4980823, -2);  // L, W
        blosum.put(4980825, -1);  // L, Y
        blosum.put(4980822, 1);   // L, V
        blosum.put(4325452, -4);  // L, B
        blosum.put(4980826, -3);  // L, Z
        blosum.put(4980824, -1);  // L, X
        blosum.put(2752588, -4);  // L, *
        blosum.put(4915275, 5);   // K, K
        blosum.put(4915277, -1);  // K, M
        blosum.put(4587595, -3);  // K, F
        blosum.put(4915280, -1);  // K, P
        blosum.put(4915283, 0);   // K, S
        blosum.put(4915284, -1);  // K, T
        blosum.put(4915287, -3);  // K, W
        blosum.put(4915289, -2);  // K, Y
        blosum.put(4915286, -2);  // K, V
        blosum.put(4325451, 0);   // K, B
        blosum.put(4915290, 1);   // K, Z
        blosum.put(4915288, -1);  // K, X
        blosum.put(2752587, -4);  // K, *
        blosum.put(5046349, 5);   // M, M
        blosum.put(4587597, 0);   // M, F
        blosum.put(5046352, -2);  // M, P
        blosum.put(5046355, -1);  // M, S
        blosum.put(5046356, -1);  // M, T
        blosum.put(5046359, -1);  // M, W
        blosum.put(5046361, -1);  // M, Y
        blosum.put(5046358, 1);   // M, V
        blosum.put(4325453, -3);  // M, B
        blosum.put(5046362, -1);  // M, Z
        blosum.put(5046360, -1);  // M, X
        blosum.put(2752589, -4);  // M, *
        blosum.put(4587590, 6);   // F, F
        blosum.put(4587600, -4);  // F, P
        blosum.put(4587603, -2);  // F, S
        blosum.put(4587604, -2);  // F, T
        blosum.put(4587607, 1);   // F, W
        blosum.put(4587609, 3);   // F, Y
        blosum.put(4587606, -1);  // F, V
        blosum.put(4325446, -3);  // F, B
        blosum.put(4587610, -3);  // F, Z
        blosum.put(4587608, -1);  // F, X
        blosum.put(2752582, -4);  // F, *
        blosum.put(5242960, 7);   // P, P
        blosum.put(5242963, -1);  // P, S
        blosum.put(5242964, -1);  // P, T
        blosum.put(5242967, -4);  // P, W
        blosum.put(5242969, -3);  // P, Y
        blosum.put(5242966, -2);  // P, V
        blosum.put(4325456, -2);  // P, B
        blosum.put(5242970, -1);  // P, Z
        blosum.put(5242968, -2);  // P, X
        blosum.put(2752592, -4);  // P, *
        blosum.put(5439571, 4);   // S, S
        blosum.put(5439572, 1);   // S, T
        blosum.put(5439575, -3);  // S, W
        blosum.put(5439577, -2);  // S, Y
        blosum.put(5439574, -2);  // S, V
        blosum.put(4325459, 0);   // S, B
        blosum.put(5439578, 0);   // S, Z
        blosum.put(5439576, 0);   // S, X
        blosum.put(2752595, -4);  // S, *
        blosum.put(5505108, 5);   // T, T
        blosum.put(5505111, -2);  // T, W
        blosum.put(5505113, -2);  // T, Y
        blosum.put(5505110, 0);   // T, V
        blosum.put(4325460, -1);  // T, B
        blosum.put(5505114, -1);  // T, Z
        blosum.put(5505112, 0);   // T, X
        blosum.put(2752596, -4);  // T, *
        blosum.put(5701719, 11);  // W, W
        blosum.put(5701721, 2);   // W, Y
        blosum.put(5636183, -3);  // W, V
        blosum.put(4325463, -4);  // W, B
        blosum.put(5701722, -3);  // W, Z
        blosum.put(5701720, -2);  // W, X
        blosum.put(2752599, -4);  // W, *
        blosum.put(5832793, 7);   // Y, Y
        blosum.put(5636185, -1);  // Y, V
        blosum.put(4325465, -3);  // Y, B
        blosum.put(5832794, -2);  // Y, Z
        blosum.put(5767257, -1);  // Y, X
        blosum.put(2752601, -4);  // Y, *
        blosum.put(5636182, 4);   // V, V
        blosum.put(4325462, -3);  // V, B
        blosum.put(5636186, -2);  // V, Z
        blosum.put(5636184, -1);  // V, X
        blosum.put(2752598, -4);  // V, *
        blosum.put(4325442, 4);   // B, B
        blosum.put(4325466, 1);   // B, Z
        blosum.put(4325464, -1);  // B, X
        blosum.put(2752578, -4);  // B, *
        blosum.put(5898330, 4);   // Z, Z
        blosum.put(5767258, -1);  // Z, X
        blosum.put(2752602, -4);  // Z, *
        blosum.put(5767256, -1);  // X, X
        blosum.put(2752600, -4);  // X, *
        blosum.put(2752554, 1);   // *, *
        return blosum;
    }),

    BLOSUM80( () -> {
        HashMap<Integer, Integer> blosum = new HashMap<>();
        blosum.put(4259905, 7);   // A, A
        blosum.put(4259922, -3);  // A, R
        blosum.put(4259918, -3);  // A, N
        blosum.put(4259908, -3);  // A, D
        blosum.put(4259907, -1);  // A, C
        blosum.put(4259921, -2);  // A, Q
        blosum.put(4259909, -2);  // A, E
        blosum.put(4259911, 0);   // A, G
        blosum.put(4259912, -3);  // A, H
        blosum.put(4259913, -3);  // A, I
        blosum.put(4259916, -3);  // A, L
        blosum.put(4259915, -1);  // A, K
        blosum.put(4259917, -2);  // A, M
        blosum.put(4259910, -4);  // A, F
        blosum.put(4259920, -1);  // A, P
        blosum.put(4259923, 2);   // A, S
        blosum.put(4259924, 0);   // A, T
        blosum.put(4259927, -5);  // A, W
        blosum.put(4259929, -4);  // A, Y
        blosum.put(4259926, -1);  // A, V
        blosum.put(4259906, -3);  // A, B
        blosum.put(4259930, -2);  // A, Z
        blosum.put(4259928, -1);  // A, X
        blosum.put(2752577, -8);  // A, *
        blosum.put(5374034, 9);   // R, R
        blosum.put(5111890, -1);  // R, N
        blosum.put(4456530, -3);  // R, D
        blosum.put(4390994, -6);  // R, C
        blosum.put(5308498, 1);   // R, Q
        blosum.put(4522066, -1);  // R, E
        blosum.put(4653138, -4);  // R, G
        blosum.put(4718674, 0);   // R, H
        blosum.put(4784210, -5);  // R, I
        blosum.put(4980818, -4);  // R, L
        blosum.put(4915282, 3);   // R, K
        blosum.put(5046354, -3);  // R, M
        blosum.put(4587602, -5);  // R, F
        blosum.put(5242962, -3);  // R, P
        blosum.put(5374035, -2);  // R, S
        blosum.put(5374036, -2);  // R, T
        blosum.put(5374039, -5);  // R, W
        blosum.put(5374041, -4);  // R, Y
        blosum.put(5374038, -4);  // R, V
        blosum.put(4325458, -2);  // R, B
        blosum.put(5374042, 0);   // R, Z
        blosum.put(5374040, -2);  // R, X
        blosum.put(2752594, -8);  // R, *
        blosum.put(5111886, 9);   // N, N
        blosum.put(4456526, 2);   // N, D
        blosum.put(4390990, -5);  // N, C
        blosum.put(5111889, 0);   // N, Q
        blosum.put(4522062, -1);  // N, E
        blosum.put(4653134, -1);  // N, G
        blosum.put(4718670, 1);   // N, H
        blosum.put(4784206, -6);  // N, I
        blosum.put(4980814, -6);  // N, L
        blosum.put(4915278, 0);   // N, K
        blosum.put(5046350, -4);  // N, M
        blosum.put(4587598, -6);  // N, F
        blosum.put(5111888, -4);  // N, P
        blosum.put(5111891, 1);   // N, S
        blosum.put(5111892, 0);   // N, T
        blosum.put(5111895, -7);  // N, W
        blosum.put(5111897, -4);  // N, Y
        blosum.put(5111894, -5);  // N, V
        blosum.put(4325454, 5);   // N, B
        blosum.put(5111898, -1);  // N, Z
        blosum.put(5111896, -2);  // N, X
        blosum.put(2752590, -8);  // N, *
        blosum.put(4456516, 10);  // D, D
        blosum.put(4390980, -7);  // D, C
        blosum.put(4456529, -1);  // D, Q
        blosum.put(4456517, 2);   // D, E
        blosum.put(4456519, -3);  // D, G
        blosum.put(4456520, -2);  // D, H
        blosum.put(4456521, -7);  // D, I
        blosum.put(4456524, -7);  // D, L
        blosum.put(4456523, -2);  // D, K
        blosum.put(4456525, -6);  // D, M
        blosum.put(4456518, -6);  // D, F
        blosum.put(4456528, -3);  // D, P
        blosum.put(4456531, -1);  // D, S
        blosum.put(4456532, -2);  // D, T
        blosum.put(4456535, -8);  // D, W
        blosum.put(4456537, -6);  // D, Y
        blosum.put(4456534, -6);  // D, V
        blosum.put(4325444, 6);   // D, B
        blosum.put(4456538, 1);   // D, Z
        blosum.put(4456536, -3);  // D, X
        blosum.put(2752580, -8);  // D, *
        blosum.put(4390979, 13);  // C, C
        blosum.put(4390993, -5);  // C, Q
        blosum.put(4390981, -7);  // C, E
        blosum.put(4390983, -6);  // C, G
        blosum.put(4390984, -7);  // C, H
        blosum.put(4390985, -2);  // C, I
        blosum.put(4390988, -3);  // C, L
        blosum.put(4390987, -6);  // C, K
        blosum.put(4390989, -3);  // C, M
        blosum.put(4390982, -4);  // C, F
        blosum.put(4390992, -6);  // C, P
        blosum.put(4390995, -2);  // C, S
        blosum.put(4390996, -2);  // C, T
        blosum.put(4390999, -5);  // C, W
        blosum.put(4391001, -5);  // C, Y
        blosum.put(4390998, -2);  // C, V
        blosum.put(4325443, -6);  // C, B
        blosum.put(4391002, -7);  // C, Z
        blosum.put(4391000, -4);  // C, X
        blosum.put(2752579, -8);  // C, *
        blosum.put(5308497, 9);   // Q, Q
        blosum.put(4522065, 3);   // Q, E
        blosum.put(4653137, -4);  // Q, G
        blosum.put(4718673, 1);   // Q, H
        blosum.put(4784209, -5);  // Q, I
        blosum.put(4980817, -4);  // Q, L
        blosum.put(4915281, 2);   // Q, K
        blosum.put(5046353, -1);  // Q, M
        blosum.put(4587601, -5);  // Q, F
        blosum.put(5242961, -3);  // Q, P
        blosum.put(5308499, -1);  // Q, S
        blosum.put(5308500, -1);  // Q, T
        blosum.put(5308503, -4);  // Q, W
        blosum.put(5308505, -3);  // Q, Y
        blosum.put(5308502, -4);  // Q, V
        blosum.put(4325457, -1);  // Q, B
        blosum.put(5308506, 5);   // Q, Z
        blosum.put(5308504, -2);  // Q, X
        blosum.put(2752593, -8);  // Q, *
        blosum.put(4522053, 8);   // E, E
        blosum.put(4522055, -4);  // E, G
        blosum.put(4522056, 0);   // E, H
        blosum.put(4522057, -6);  // E, I
        blosum.put(4522060, -6);  // E, L
        blosum.put(4522059, 1);   // E, K
        blosum.put(4522061, -4);  // E, M
        blosum.put(4522054, -6);  // E, F
        blosum.put(4522064, -2);  // E, P
        blosum.put(4522067, -1);  // E, S
        blosum.put(4522068, -2);  // E, T
        blosum.put(4522071, -6);  // E, W
        blosum.put(4522073, -5);  // E, Y
        blosum.put(4522070, -4);  // E, V
        blosum.put(4325445, 1);   // E, B
        blosum.put(4522074, 6);   // E, Z
        blosum.put(4522072, -2);  // E, X
        blosum.put(2752581, -8);  // E, *
        blosum.put(4653127, 9);   // G, G
        blosum.put(4653128, -4);  // G, H
        blosum.put(4653129, -7);  // G, I
        blosum.put(4653132, -7);  // G, L
        blosum.put(4653131, -3);  // G, K
        blosum.put(4653133, -5);  // G, M
        blosum.put(4587591, -6);  // G, F
        blosum.put(4653136, -5);  // G, P
        blosum.put(4653139, -1);  // G, S
        blosum.put(4653140, -3);  // G, T
        blosum.put(4653143, -6);  // G, W
        blosum.put(4653145, -6);  // G, Y
        blosum.put(4653142, -6);  // G, V
        blosum.put(4325447, -2);  // G, B
        blosum.put(4653146, -4);  // G, Z
        blosum.put(4653144, -3);  // G, X
        blosum.put(2752583, -8);  // G, *
        blosum.put(4718664, 12);  // H, H
        blosum.put(4718665, -6);  // H, I
        blosum.put(4718668, -5);  // H, L
        blosum.put(4718667, -1);  // H, K
        blosum.put(4718669, -4);  // H, M
        blosum.put(4587592, -2);  // H, F
        blosum.put(4718672, -4);  // H, P
        blosum.put(4718675, -2);  // H, S
        blosum.put(4718676, -3);  // H, T
        blosum.put(4718679, -4);  // H, W
        blosum.put(4718681, 3);   // H, Y
        blosum.put(4718678, -5);  // H, V
        blosum.put(4325448, -1);  // H, B
        blosum.put(4718682, 0);   // H, Z
        blosum.put(4718680, -2);  // H, X
        blosum.put(2752584, -8);  // H, *
        blosum.put(4784201, 7);   // I, I
        blosum.put(4784204, 2);   // I, L
        blosum.put(4784203, -5);  // I, K
        blosum.put(4784205, 2);   // I, M
        blosum.put(4587593, -1);  // I, F
        blosum.put(4784208, -5);  // I, P
        blosum.put(4784211, -4);  // I, S
        blosum.put(4784212, -2);  // I, T
        blosum.put(4784215, -5);  // I, W
        blosum.put(4784217, -3);  // I, Y
        blosum.put(4784214, 4);   // I, V
        blosum.put(4325449, -6);  // I, B
        blosum.put(4784218, -6);  // I, Z
        blosum.put(4784216, -2);  // I, X
        blosum.put(2752585, -8);  // I, *
        blosum.put(4980812, 6);   // L, L
        blosum.put(4915276, -4);  // L, K
        blosum.put(4980813, 3);   // L, M
        blosum.put(4587596, 0);   // L, F
        blosum.put(4980816, -5);  // L, P
        blosum.put(4980819, -4);  // L, S
        blosum.put(4980820, -3);  // L, T
        blosum.put(4980823, -4);  // L, W
        blosum.put(4980825, -2);  // L, Y
        blosum.put(4980822, 1);   // L, V
        blosum.put(4325452, -7);  // L, B
        blosum.put(4980826, -5);  // L, Z
        blosum.put(4980824, -2);  // L, X
        blosum.put(2752588, -8);  // L, *
        blosum.put(4915275, 8);   // K, K
        blosum.put(4915277, -3);  // K, M
        blosum.put(4587595, -5);  // K, F
        blosum.put(4915280, -2);  // K, P
        blosum.put(4915283, -1);  // K, S
        blosum.put(4915284, -1);  // K, T
        blosum.put(4915287, -6);  // K, W
        blosum.put(4915289, -4);  // K, Y
        blosum.put(4915286, -4);  // K, V
        blosum.put(4325451, -1);  // K, B
        blosum.put(4915290, 1);   // K, Z
        blosum.put(4915288, -2);  // K, X
        blosum.put(2752587, -8);  // K, *
        blosum.put(5046349, 9);   // M, M
        blosum.put(4587597, 0);   // M, F
        blosum.put(5046352, -4);  // M, P
        blosum.put(5046355, -3);  // M, S
        blosum.put(5046356, -1);  // M, T
        blosum.put(5046359, -3);  // M, W
        blosum.put(5046361, -3);  // M, Y
        blosum.put(5046358, 1);   // M, V
        blosum.put(4325453, -5);  // M, B
        blosum.put(5046362, -3);  // M, Z
        blosum.put(5046360, -2);  // M, X
        blosum.put(2752589, -8);  // M, *
        blosum.put(4587590, 10);  // F, F
        blosum.put(4587600, -6);  // F, P
        blosum.put(4587603, -4);  // F, S
        blosum.put(4587604, -4);  // F, T
        blosum.put(4587607, 0);   // F, W
        blosum.put(4587609, 4);   // F, Y
        blosum.put(4587606, -2);  // F, V
        blosum.put(4325446, -6);  // F, B
        blosum.put(4587610, -6);  // F, Z
        blosum.put(4587608, -3);  // F, X
        blosum.put(2752582, -8);  // F, *
        blosum.put(5242960, 12);  // P, P
        blosum.put(5242963, -2);  // P, S
        blosum.put(5242964, -3);  // P, T
        blosum.put(5242967, -7);  // P, W
        blosum.put(5242969, -6);  // P, Y
        blosum.put(5242966, -4);  // P, V
        blosum.put(4325456, -4);  // P, B
        blosum.put(5242970, -2);  // P, Z
        blosum.put(5242968, -3);  // P, X
        blosum.put(2752592, -8);  // P, *
        blosum.put(5439571, 7);   // S, S
        blosum.put(5439572, 2);   // S, T
        blosum.put(5439575, -6);  // S, W
        blosum.put(5439577, -3);  // S, Y
        blosum.put(5439574, -3);  // S, V
        blosum.put(4325459, 0);   // S, B
        blosum.put(5439578, -1);  // S, Z
        blosum.put(5439576, -1);  // S, X
        blosum.put(2752595, -8);  // S, *
        blosum.put(5505108, 8);   // T, T
        blosum.put(5505111, -5);  // T, W
        blosum.put(5505113, -3);  // T, Y
        blosum.put(5505110, 0);   // T, V
        blosum.put(4325460, -1);  // T, B
        blosum.put(5505114, -2);  // T, Z
        blosum.put(5505112, -1);  // T, X
        blosum.put(2752596, -8);  // T, *
        blosum.put(5701719, 16);  // W, W
        blosum.put(5701721, 3);   // W, Y
        blosum.put(5636183, -5);  // W, V
        blosum.put(4325463, -8);  // W, B
        blosum.put(5701722, -5);  // W, Z
        blosum.put(5701720, -5);  // W, X
        blosum.put(2752599, -8);  // W, *
        blosum.put(5832793, 11);  // Y, Y
        blosum.put(5636185, -3);  // Y, V
        blosum.put(4325465, -5);  // Y, B
        blosum.put(5832794, -4);  // Y, Z
        blosum.put(5767257, -3);  // Y, X
        blosum.put(2752601, -8);  // Y, *
        blosum.put(5636182, 7);   // V, V
        blosum.put(4325462, -6);  // V, B
        blosum.put(5636186, -4);  // V, Z
        blosum.put(5636184, -2);  // V, X
        blosum.put(2752598, -8);  // V, *
        blosum.put(4325442, 6);   // B, B
        blosum.put(4325466, 0);   // B, Z
        blosum.put(4325464, -3);  // B, X
        blosum.put(2752578, -8);  // B, *
        blosum.put(5898330, 6);   // Z, Z
        blosum.put(5767258, -1);  // Z, X
        blosum.put(2752602, -8);  // Z, *
        blosum.put(5767256, -2);  // X, X
        blosum.put(2752600, -8);  // X, *
        blosum.put(2752554, 1);   // *, *
        return blosum;
    }),

    BLOSUM90( () -> {
            HashMap<Integer, Integer> blosum = new HashMap<>();
            blosum.put(4259905, 5);   // A, A
            blosum.put(4259922, -2);  // A, R
            blosum.put(4259918, -2);  // A, N
            blosum.put(4259908, -3);  // A, D
            blosum.put(4259907, -1);  // A, C
            blosum.put(4259921, -1);  // A, Q
            blosum.put(4259909, -1);  // A, E
            blosum.put(4259911, 0);   // A, G
            blosum.put(4259912, -2);  // A, H
            blosum.put(4259913, -2);  // A, I
            blosum.put(4259916, -2);  // A, L
            blosum.put(4259915, -1);  // A, K
            blosum.put(4259917, -2);  // A, M
            blosum.put(4259910, -3);  // A, F
            blosum.put(4259920, -1);  // A, P
            blosum.put(4259923, 1);   // A, S
            blosum.put(4259924, 0);   // A, T
            blosum.put(4259927, -4);  // A, W
            blosum.put(4259929, -3);  // A, Y
            blosum.put(4259926, -1);  // A, V
            blosum.put(4259906, -2);  // A, B
            blosum.put(4259930, -1);  // A, Z
            blosum.put(4259928, -1);  // A, X
            blosum.put(2752577, -6);  // A, *
            blosum.put(5374034, 6);   // R, R
            blosum.put(5111890, -1);  // R, N
            blosum.put(4456530, -3);  // R, D
            blosum.put(4390994, -5);  // R, C
            blosum.put(5308498, 1);   // R, Q
            blosum.put(4522066, -1);  // R, E
            blosum.put(4653138, -3);  // R, G
            blosum.put(4718674, 0);   // R, H
            blosum.put(4784210, -4);  // R, I
            blosum.put(4980818, -3);  // R, L
            blosum.put(4915282, 2);   // R, K
            blosum.put(5046354, -2);  // R, M
            blosum.put(4587602, -4);  // R, F
            blosum.put(5242962, -3);  // R, P
            blosum.put(5374035, -1);  // R, S
            blosum.put(5374036, -2);  // R, T
            blosum.put(5374039, -4);  // R, W
            blosum.put(5374041, -3);  // R, Y
            blosum.put(5374038, -3);  // R, V
            blosum.put(4325458, -2);  // R, B
            blosum.put(5374042, 0);   // R, Z
            blosum.put(5374040, -2);  // R, X
            blosum.put(2752594, -6);  // R, *
            blosum.put(5111886, 7);   // N, N
            blosum.put(4456526, 1);   // N, D
            blosum.put(4390990, -4);  // N, C
            blosum.put(5111889, 0);   // N, Q
            blosum.put(4522062, -1);  // N, E
            blosum.put(4653134, -1);  // N, G
            blosum.put(4718670, 0);   // N, H
            blosum.put(4784206, -4);  // N, I
            blosum.put(4980814, -4);  // N, L
            blosum.put(4915278, 0);   // N, K
            blosum.put(5046350, -3);  // N, M
            blosum.put(4587598, -4);  // N, F
            blosum.put(5111888, -3);  // N, P
            blosum.put(5111891, 0);   // N, S
            blosum.put(5111892, 0);   // N, T
            blosum.put(5111895, -5);  // N, W
            blosum.put(5111897, -3);  // N, Y
            blosum.put(5111894, -4);  // N, V
            blosum.put(4325454, 4);   // N, B
            blosum.put(5111898, -1);  // N, Z
            blosum.put(5111896, -2);  // N, X
            blosum.put(2752590, -6);  // N, *
            blosum.put(4456516, 7);   // D, D
            blosum.put(4390980, -5);  // D, C
            blosum.put(4456529, -1);  // D, Q
            blosum.put(4456517, 1);   // D, E
            blosum.put(4456519, -2);  // D, G
            blosum.put(4456520, -2);  // D, H
            blosum.put(4456521, -5);  // D, I
            blosum.put(4456524, -5);  // D, L
            blosum.put(4456523, -1);  // D, K
            blosum.put(4456525, -4);  // D, M
            blosum.put(4456518, -5);  // D, F
            blosum.put(4456528, -3);  // D, P
            blosum.put(4456531, -1);  // D, S
            blosum.put(4456532, -2);  // D, T
            blosum.put(4456535, -6);  // D, W
            blosum.put(4456537, -4);  // D, Y
            blosum.put(4456534, -5);  // D, V
            blosum.put(4325444, 4);   // D, B
            blosum.put(4456538, 0);   // D, Z
            blosum.put(4456536, -2);  // D, X
            blosum.put(2752580, -6);  // D, *
            blosum.put(4390979, 9);   // C, C
            blosum.put(4390993, -4);  // C, Q
            blosum.put(4390981, -6);  // C, E
            blosum.put(4390983, -4);  // C, G
            blosum.put(4390984, -5);  // C, H
            blosum.put(4390985, -2);  // C, I
            blosum.put(4390988, -2);  // C, L
            blosum.put(4390987, -4);  // C, K
            blosum.put(4390989, -2);  // C, M
            blosum.put(4390982, -3);  // C, F
            blosum.put(4390992, -4);  // C, P
            blosum.put(4390995, -2);  // C, S
            blosum.put(4390996, -2);  // C, T
            blosum.put(4390999, -4);  // C, W
            blosum.put(4391001, -4);  // C, Y
            blosum.put(4390998, -2);  // C, V
            blosum.put(4325443, -4);  // C, B
            blosum.put(4391002, -5);  // C, Z
            blosum.put(4391000, -3);  // C, X
            blosum.put(2752579, -6);  // C, *
            blosum.put(5308497, 7);   // Q, Q
            blosum.put(4522065, 2);   // Q, E
            blosum.put(4653137, -3);  // Q, G
            blosum.put(4718673, 1);   // Q, H
            blosum.put(4784209, -4);  // Q, I
            blosum.put(4980817, -3);  // Q, L
            blosum.put(4915281, 1);   // Q, K
            blosum.put(5046353, 0);   // Q, M
            blosum.put(4587601, -4);  // Q, F
            blosum.put(5242961, -2);  // Q, P
            blosum.put(5308499, -1);  // Q, S
            blosum.put(5308500, -1);  // Q, T
            blosum.put(5308503, -3);  // Q, W
            blosum.put(5308505, -3);  // Q, Y
            blosum.put(5308502, -3);  // Q, V
            blosum.put(4325457, -1);  // Q, B
            blosum.put(5308506, 4);   // Q, Z
            blosum.put(5308504, -1);  // Q, X
            blosum.put(2752593, -6);  // Q, *
            blosum.put(4522053, 6);   // E, E
            blosum.put(4522055, -3);  // E, G
            blosum.put(4522056, -1);  // E, H
            blosum.put(4522057, -4);  // E, I
            blosum.put(4522060, -4);  // E, L
            blosum.put(4522059, 0);   // E, K
            blosum.put(4522061, -3);  // E, M
            blosum.put(4522054, -5);  // E, F
            blosum.put(4522064, -2);  // E, P
            blosum.put(4522067, -1);  // E, S
            blosum.put(4522068, -1);  // E, T
            blosum.put(4522071, -5);  // E, W
            blosum.put(4522073, -4);  // E, Y
            blosum.put(4522070, -3);  // E, V
            blosum.put(4325445, 0);   // E, B
            blosum.put(4522074, 4);   // E, Z
            blosum.put(4522072, -2);  // E, X
            blosum.put(2752581, -6);  // E, *
            blosum.put(4653127, 6);   // G, G
            blosum.put(4653128, -3);  // G, H
            blosum.put(4653129, -5);  // G, I
            blosum.put(4653132, -5);  // G, L
            blosum.put(4653131, -2);  // G, K
            blosum.put(4653133, -4);  // G, M
            blosum.put(4587591, -5);  // G, F
            blosum.put(4653136, -3);  // G, P
            blosum.put(4653139, -1);  // G, S
            blosum.put(4653140, -3);  // G, T
            blosum.put(4653143, -4);  // G, W
            blosum.put(4653145, -5);  // G, Y
            blosum.put(4653142, -5);  // G, V
            blosum.put(4325447, -2);  // G, B
            blosum.put(4653146, -3);  // G, Z
            blosum.put(4653144, -2);  // G, X
            blosum.put(2752583, -6);  // G, *
            blosum.put(4718664, 8);   // H, H
            blosum.put(4718665, -4);  // H, I
            blosum.put(4718668, -4);  // H, L
            blosum.put(4718667, -1);  // H, K
            blosum.put(4718669, -3);  // H, M
            blosum.put(4587592, -2);  // H, F
            blosum.put(4718672, -3);  // H, P
            blosum.put(4718675, -2);  // H, S
            blosum.put(4718676, -2);  // H, T
            blosum.put(4718679, -3);  // H, W
            blosum.put(4718681, 1);   // H, Y
            blosum.put(4718678, -4);  // H, V
            blosum.put(4325448, -1);  // H, B
            blosum.put(4718682, 0);   // H, Z
            blosum.put(4718680, -2);  // H, X
            blosum.put(2752584, -6);  // H, *
            blosum.put(4784201, 5);   // I, I
            blosum.put(4784204, 1);   // I, L
            blosum.put(4784203, -4);  // I, K
            blosum.put(4784205, 1);   // I, M
            blosum.put(4587593, -1);  // I, F
            blosum.put(4784208, -4);  // I, P
            blosum.put(4784211, -3);  // I, S
            blosum.put(4784212, -1);  // I, T
            blosum.put(4784215, -4);  // I, W
            blosum.put(4784217, -2);  // I, Y
            blosum.put(4784214, 3);   // I, V
            blosum.put(4325449, -5);  // I, B
            blosum.put(4784218, -4);  // I, Z
            blosum.put(4784216, -2);  // I, X
            blosum.put(2752585, -6);  // I, *
            blosum.put(4980812, 5);   // L, L
            blosum.put(4915276, -3);  // L, K
            blosum.put(4980813, 2);   // L, M
            blosum.put(4587596, 0);   // L, F
            blosum.put(4980816, -4);  // L, P
            blosum.put(4980819, -3);  // L, S
            blosum.put(4980820, -2);  // L, T
            blosum.put(4980823, -3);  // L, W
            blosum.put(4980825, -2);  // L, Y
            blosum.put(4980822, 0);   // L, V
            blosum.put(4325452, -5);  // L, B
            blosum.put(4980826, -4);  // L, Z
            blosum.put(4980824, -2);  // L, X
            blosum.put(2752588, -6);  // L, *
            blosum.put(4915275, 6);   // K, K
            blosum.put(4915277, -2);  // K, M
            blosum.put(4587595, -4);  // K, F
            blosum.put(4915280, -2);  // K, P
            blosum.put(4915283, -1);  // K, S
            blosum.put(4915284, -1);  // K, T
            blosum.put(4915287, -5);  // K, W
            blosum.put(4915289, -3);  // K, Y
            blosum.put(4915286, -3);  // K, V
            blosum.put(4325451, -1);  // K, B
            blosum.put(4915290, 1);   // K, Z
            blosum.put(4915288, -1);  // K, X
            blosum.put(2752587, -6);  // K, *
            blosum.put(5046349, 7);   // M, M
            blosum.put(4587597, -1);  // M, F
            blosum.put(5046352, -3);  // M, P
            blosum.put(5046355, -2);  // M, S
            blosum.put(5046356, -1);  // M, T
            blosum.put(5046359, -2);  // M, W
            blosum.put(5046361, -2);  // M, Y
            blosum.put(5046358, 0);   // M, V
            blosum.put(4325453, -4);  // M, B
            blosum.put(5046362, -2);  // M, Z
            blosum.put(5046360, -1);  // M, X
            blosum.put(2752589, -6);  // M, *
            blosum.put(4587590, 7);   // F, F
            blosum.put(4587600, -4);  // F, P
            blosum.put(4587603, -3);  // F, S
            blosum.put(4587604, -3);  // F, T
            blosum.put(4587607, 0);   // F, W
            blosum.put(4587609, 3);   // F, Y
            blosum.put(4587606, -2);  // F, V
            blosum.put(4325446, -4);  // F, B
            blosum.put(4587610, -4);  // F, Z
            blosum.put(4587608, -2);  // F, X
            blosum.put(2752582, -6);  // F, *
            blosum.put(5242960, 8);   // P, P
            blosum.put(5242963, -2);  // P, S
            blosum.put(5242964, -2);  // P, T
            blosum.put(5242967, -5);  // P, W
            blosum.put(5242969, -4);  // P, Y
            blosum.put(5242966, -3);  // P, V
            blosum.put(4325456, -3);  // P, B
            blosum.put(5242970, -2);  // P, Z
            blosum.put(5242968, -2);  // P, X
            blosum.put(2752592, -6);  // P, *
            blosum.put(5439571, 5);   // S, S
            blosum.put(5439572, 1);   // S, T
            blosum.put(5439575, -4);  // S, W
            blosum.put(5439577, -3);  // S, Y
            blosum.put(5439574, -2);  // S, V
            blosum.put(4325459, 0);   // S, B
            blosum.put(5439578, -1);  // S, Z
            blosum.put(5439576, -1);  // S, X
            blosum.put(2752595, -6);  // S, *
            blosum.put(5505108, 6);   // T, T
            blosum.put(5505111, -4);  // T, W
            blosum.put(5505113, -2);  // T, Y
            blosum.put(5505110, -1);  // T, V
            blosum.put(4325460, -1);  // T, B
            blosum.put(5505114, -1);  // T, Z
            blosum.put(5505112, -1);  // T, X
            blosum.put(2752596, -6);  // T, *
            blosum.put(5701719, 11);  // W, W
            blosum.put(5701721, 2);   // W, Y
            blosum.put(5636183, -3);  // W, V
            blosum.put(4325463, -6);  // W, B
            blosum.put(5701722, -4);  // W, Z
            blosum.put(5701720, -3);  // W, X
            blosum.put(2752599, -6);  // W, *
            blosum.put(5832793, 8);   // Y, Y
            blosum.put(5636185, -3);  // Y, V
            blosum.put(4325465, -4);  // Y, B
            blosum.put(5832794, -3);  // Y, Z
            blosum.put(5767257, -2);  // Y, X
            blosum.put(2752601, -6);  // Y, *
            blosum.put(5636182, 5);   // V, V
            blosum.put(4325462, -4);  // V, B
            blosum.put(5636186, -3);  // V, Z
            blosum.put(5636184, -2);  // V, X
            blosum.put(2752598, -6);  // V, *
            blosum.put(4325442, 4);   // B, B
            blosum.put(4325466, 0);   // B, Z
            blosum.put(4325464, -2);  // B, X
            blosum.put(2752578, -6);  // B, *
            blosum.put(5898330, 4);   // Z, Z
            blosum.put(5767258, -1);  // Z, X
            blosum.put(2752602, -6);  // Z, *
            blosum.put(5767256, -2);  // X, X
            blosum.put(2752600, -6);  // X, *
            blosum.put(2752554, 1);   // *, *
            return blosum;
    });

    private final Supplier<HashMap<Integer, Integer>> mapSupplier;
    private HashMap<Integer, Integer> cachedMap;

    ScoreMatrix(Supplier<HashMap<Integer, Integer>> supplier) {
        this.mapSupplier = supplier;
    }

    /**
     * accesses the ScoreMatrix and returns the Score for both chars
     * @param letter1
     * @param letter2
     * @return
     */
    public int getScore(char letter1, char letter2) {
        if (cachedMap == null) {
            cachedMap = mapSupplier.get();
        }
        // for keeping symmetry: always the smaller letter is shifted 16 bits into the upper
        // and the bigger letter is placed on the lower 16 bits.
        int key = (letter1 < letter2) ? (letter1 << 16) | letter2 : (letter2 << 16) | letter1;
        return this.cachedMap.get(key);
    }

    /**
     * returns the appropriate BLOSUM matrix based on the percent Identity
     * @param percentIdentity the % value on how identicle two sequences are
     * @return the appropriate BLOSUM matrix
     */
    public static ScoreMatrix getBLOSUM(int percentIdentity) {
        if (percentIdentity > 90) {
            return BLOSUM90;
        } else if (percentIdentity > 75) {
            return BLOSUM80;
        } else if (percentIdentity > 55) {
            return BLOSUM62;
        } else if (percentIdentity > 45) {
            return BLOSUM50;
        } else {
            return BLOSUM45;
        }
    }

    /**
     * Computes the percent-identity of two sequences (of the same length!)
     * @param sequence1
     * @param sequence2
     * @return the percent-identity
     */
    public static double computePercentIdentity(String sequence1, String sequence2) {
        int numberOfIdenticalPositions = 0;
        for (int i = 0; i < sequence1.length(); i++) {
            if (sequence1.charAt(i) == sequence2.charAt(i)) {
                numberOfIdenticalPositions++;
            }
        }
        return numberOfIdenticalPositions / (double) sequence1.length();
    }
}
